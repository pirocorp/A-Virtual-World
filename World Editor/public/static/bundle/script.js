(()=>{"use strict";var t,e;!function(t){t.Aqua="Aqua",t.Black="Black",t.Blue="Blue",t.Fuchsia="Fuchsia",t.Gray="Gray",t.Green="Green",t.Lime="Lime",t.Maroon="Maroon",t.Navy="Navy",t.Olive="Olive",t.Purple="Purple",t.Random="Random",t.Red="Red",t.Silver="Silver",t.Teal="Teal",t.White="White",t.Yellow="Yellow"}(t||(t={}));class s{constructor(t,e){this._x=t,this._y=e}get x(){return this._x}get y(){return this._y}equals(t){return this._x===t.x&&this._y===t.y}distance(t){return Math.hypot(this._x-t.x,this._y-t.y)}mutate(t){this._x=t.x,this._y=t.y}draw(e,s={size:18,color:t.Black,outline:!1,fill:!1}){const n=s.size/2;e.beginPath(),e.fillStyle=s.color,e.arc(this._x,this._y,n,0,2*Math.PI),e.fill(),s.outline&&(e.beginPath(),e.lineWidth=2,e.strokeStyle=t.Yellow,e.arc(this._x,this._y,.6*n,0,2*Math.PI),e.stroke()),s.fill&&(e.beginPath(),e.fillStyle=t.Yellow,e.arc(this._x,this._y,.4*n,0,2*Math.PI),e.fill())}static getNearestPoint(t,e,s=Number.MAX_SAFE_INTEGER){let n=Number.MAX_SAFE_INTEGER,i=null;for(const o of e){const e=t.distance(o);e<n&&e<s&&(i=o,n=e)}return i}}class n{constructor(t,e){this._a=t,this._b=e}get pointA(){return this._a}get pointB(){return this._b}equals(t){return this.includes(t.pointA)&&this.includes(t.pointB)}includes(t){return this.pointA.equals(t)||this.pointB.equals(t)}draw(e,s={width:2,color:t.Black,dash:[]}){e.beginPath(),e.lineWidth=s.width,e.strokeStyle=s.color,e.setLineDash(s.dash),e.moveTo(this._a.x,this._a.y),e.lineTo(this._b.x,this._b.y),e.stroke(),e.setLineDash([])}}!function(t){t[t.LeftClick=0]="LeftClick",t[t.RigthClick=2]="RigthClick"}(e||(e={}));const i=new s(200,200),o=new s(500,200),h=new s(400,400),a=new s(100,300),r=new n(i,o),l=new n(i,h),d=new n(i,a),c=new n(o,h),_=document.getElementById("canvas"),u=new class{constructor(t=[],e=[]){this._points=t,this._segments=e}get points(){return this._points}get segments(){return this._segments}tryAddPoint(t){return!this.containsPoint(t)&&(this._points.push(t),!0)}tryAddSegment(t){return!this.containsSegment(t)&&!t.pointA.equals(t.pointB)&&(this._segments.push(t),!0)}tryRemovePoint(t){if(0==this._points.length)return!1;const e=this._points.indexOf(t);if(e<0)return!1;const s=this.getSegmentsContainingPoint(t);for(const t of s)this.tryRemoveSegment(t);return this._points.splice(e,1),!0}tryRemoveSegment(t){if(0==this._segments.length)return!1;const e=this._segments.indexOf(t);return!(e<0||(this._segments.splice(e,1),0))}dispose(){this._points.length=0,this._segments.length=0}containsPoint(t){return this._points.some((e=>e.equals(t)))}containsSegment(t){return this._segments.some((e=>e.equals(t)))}getSegmentsContainingPoint(t){let e=[];for(const s of this._segments)s.includes(t)&&e.push(s);return e}}([i,o,h,a],[r,l,d,c]),g=new class{constructor(e,s){this._pointTresholdDistance=10,this._pointOptions={size:18,color:t.Black,outline:!1,fill:!1},this._segmentOptions={width:2,color:t.Black,dash:[]},this._selected=null,this._hovered=null,this._dragging=!1,this._mouse=null,this._canvasContainer=e,this._graph=s,this._canvas=this.initializeCanvas(),this._context=this._canvas.getContext("2d"),this.onMouseDownEventHandler=this.onMouseDownEventHandler.bind(this),this.onMouseMoveEventHandler=this.onMouseMoveEventHandler.bind(this),this.onContextMenuEventHandler=this.onContextMenuEventHandler.bind(this),this.onMouseUpEventHandler=this.onMouseUpEventHandler.bind(this),this.addEventListeners()}addRandomSegment(){if(this._graph.points.length<2)return;const t=Math.floor(Math.random()*this._graph.points.length),e=Math.floor(Math.random()*this._graph.points.length),s=this._graph.points[t],i=this._graph.points[e],o=new n(s,i);this._graph.tryAddSegment(o)}removeRandomSegment(){if(0==this._graph.segments.length)return;const t=Math.floor(Math.random()*this._graph.segments.length),e=this._graph.segments[t];this._graph.tryRemoveSegment(e)}removeAll(){this._graph.dispose()}draw(){var t;for(const t of this._graph.segments)t.draw(this._context);for(const t of this._graph.points)t.draw(this._context,this._pointOptions);if(this._selected){this._selected.draw(this._context,Object.assign(Object.assign({},this._pointOptions),{outline:!0}));const e=null!==(t=this._hovered)&&void 0!==t?t:this._mouse;new n(this._selected,e).draw(this._context,Object.assign(Object.assign({},this._segmentOptions),{dash:[3,3]}))}this._hovered&&this._hovered.draw(this._context,Object.assign(Object.assign({},this._pointOptions),{fill:!0}))}clearCanvas(){this._context.clearRect(0,0,this._canvas.width,this._canvas.height)}initializeCanvas(){const t=document.createElement("canvas");return t.id="main-canvas",t.width=1e3,t.height=1e3,t.style.border="1px solid",this._canvasContainer.appendChild(t),t}addEventListeners(){this._canvas.addEventListener("mousedown",this.onMouseDownEventHandler),this._canvas.addEventListener("mousemove",this.onMouseMoveEventHandler),this._canvas.addEventListener("contextmenu",this.onContextMenuEventHandler),this._canvas.addEventListener("mouseup",this.onMouseUpEventHandler)}onMouseDownEventHandler(t){t.button==e.RigthClick&&this.handleRightClick(),t.button==e.LeftClick&&this.handleLeftClick()}onMouseMoveEventHandler(t){var e;this._mouse=new s(t.offsetX,t.offsetY),this._hovered=s.getNearestPoint(this._mouse,this._graph.points,this._pointTresholdDistance),1==this._dragging&&(null===(e=this._selected)||void 0===e||e.mutate(this._mouse))}onMouseUpEventHandler(t){this._dragging=!1}onContextMenuEventHandler(t){t.preventDefault()}handleLeftClick(){if(this._hovered)return this.selectPoint(this._hovered),void(this._dragging=!0);this._graph.tryAddPoint(this._mouse)&&(this.selectPoint(this._mouse),this._hovered=this._mouse)}handleRightClick(){this._selected?this._selected=null:this._hovered&&this.removePoint(this._hovered)}selectPoint(t){if(this._selected){const e=new n(this._selected,t);this._graph.tryAddSegment(e)}this._selected=t}removePoint(t){this._graph.tryRemovePoint(t),this._hovered=null,this._selected==t&&(this._selected=null)}}(_,u);!function t(){g.clearCanvas(),g.draw(),requestAnimationFrame(t)}()})();